services:
  webapp-prod:
    container_name: webapp-prod
    build:
      context: ./webapp
      dockerfile: /docker/prod.Dockerfile
      args:
        TEST_VAR: ${TEST_VAR}
        SECRET_VAR: ${SECRET_VAR}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_HOST: ${DB_HOST}
        DB_PORT: ${DB_PORT}
        DB_NAME: ${DB_NAME}
        DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public"
        NEXT_PUBLIC_DEFAULT_REGISTER_PASSWORD: ${NEXT_PUBLIC_DEFAULT_REGISTER_PASSWORD}
    environment:
      TEST_VAR: ${TEST_VAR}
      SECRET_VAR: ${SECRET_VAR}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public"
      NEXT_PUBLIC_DEFAULT_REGISTER_PASSWORD: ${NEXT_PUBLIC_DEFAULT_REGISTER_PASSWORD}
    restart: always
    ports:
      - 3000:3000

  db:
    image: postgres:16-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: Europe/Bucharest
    ports:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
